{"version":3,"sources":["../../src/js/drawerr.js"],"names":["settings","bodyNoScrollClass","drawerOpenClass","toggleBtnActiveClass","slideFromClass","options","btnText","drawerr","navbar","toggleBtn","slideFrom","preventBodyOnClick","Drawerr","args","Object","assign","openEvent","Event","closeEvent","body","document","querySelector","beforeVisible","classList","remove","add","events","setSlideFromDirection","drawerrOffsetTop","insertHamburgerText","style","top","offsetHeight","addEventListener","toggleDrawer","e","bodyClick","window","onresize","onResize","addOrRemoveClass","dispatchEvents","contains","target","dispatchEvent","el","addClass","length","insertAdjacentHTML"],"mappings":"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","sourcesContent":["const settings = {\n  bodyNoScrollClass: 'drawerr-no-scroll',\n  drawerOpenClass: 'drawerr--open',\n  toggleBtnActiveClass: 'drawerr-btn--active',\n  slideFromClass: 'drawerr-slide-from-right'\n}\n\nconst options = {\n  btnText: 'MENU',\n  drawerr: '#drawerr',\n  navbar: 'header',\n  toggleBtn: '.toggleDrawerr',\n  slideFrom: 'left',\n  preventBodyOnClick: false\n}\n\nexport default class Drawerr {\n  constructor (args = {}) {\n    this.settings = settings\n    this.options = Object.assign(options, args)\n\n    // Events\n    this.openEvent = new Event('drawerr-open')\n    this.closeEvent = new Event('drawerr-close')\n\n    // Dom elements\n    this.body = document.querySelector('body')\n    this.drawerr = document.querySelector(this.options.drawerr)\n    this.toggleBtn = document.querySelector(this.options.toggleBtn)\n    this.navbar = document.querySelector(this.options.navbar)\n\n    this.beforeVisible()\n\n    // Drawerr now visible\n    this.drawerr.classList.remove('drawerr--init')\n    this.drawerr.classList.add('drawerr')\n    this.toggleBtn.classList.add('drawerr-btn')\n\n    this.events()\n  }\n\n  beforeVisible () {\n    this.setSlideFromDirection()\n    this.drawerrOffsetTop()\n    this.insertHamburgerText()\n  }\n\n  drawerrOffsetTop () {\n    this.drawerr.style.top = options.navbar.offsetHeight + 'px';\n  }\n\n  setSlideFromDirection () {\n    if (options.slideFrom === 'right') {\n      this.drawerr.classList.add(this.settings.slideFromClass)\n    }\n  }\n\n  events () {\n    this.toggleBtn.addEventListener('click', () => {\n      this.toggleDrawer()\n    })\n\n    document.addEventListener('click', e => {\n      this.bodyClick(e)\n    })\n\n    window.onresize = e => {\n      this.onResize()\n    };\n  }\n\n  toggleDrawer () {\n    this.addOrRemoveClass(this.body, this.settings.bodyNoScrollClass)\n    this.addOrRemoveClass(this.drawerr, this.settings.drawerOpenClass)\n    this.addOrRemoveClass(this.toggleBtn, this.settings.toggleBtnActiveClass)\n\n    this.dispatchEvents()\n  }\n\n  onResize () {\n    this.drawerrOffsetTop()\n  }\n\n  bodyClick (e) {\n    if (this.toggleBtn.contains(e.target)) return\n\n    if (this.options.preventBodyOnClick) return\n\n    if (\n      !this.drawerr.contains(e.target) &&\n      document\n        .querySelector(options.drawerr)\n        .classList.contains(this.settings.drawerOpenClass)\n    ) {\n      this.toggleDrawer()\n    }\n  }\n\n  dispatchEvents () {\n    if (this.drawerr.classList.contains(this.settings.drawerOpenClass)) {\n      document.dispatchEvent(this.openEvent)\n    } else {\n      document.dispatchEvent(this.closeEvent)\n    }\n  }\n\n  addOrRemoveClass (el, addClass) {\n    if (el.classList.contains(addClass)) {\n      return el.classList.remove(addClass)\n    }\n    el.classList.add(addClass)\n  }\n\n  insertHamburgerText () {\n    if (options.btnText.length === 0) return\n\n    this.toggleBtn.classList.add('drawerr-btn--has-menu-text')\n    this.toggleBtn.insertAdjacentHTML(\n      'beforeend',\n      `<span class=\"drawerr-btn__menu-text\">${options.btnText}</span>`\n    )\n  }\n}\n"],"file":"drawerr.js"}